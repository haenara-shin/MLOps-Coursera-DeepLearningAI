WEBVTT

1
00:00:00.000 --> 00:00:03.075
Now let's take a look
at Feature Crosses.

2
00:00:03.075 --> 00:00:05.790
Feature Crosses is the main thing

3
00:00:05.790 --> 00:00:07.830
that we're going to be talking
about in this section.

4
00:00:07.830 --> 00:00:09.480
We're also going to
take a quick look

5
00:00:09.480 --> 00:00:11.670
at encoding features.

6
00:00:11.670 --> 00:00:13.680
What are Feature crosses?

7
00:00:13.680 --> 00:00:16.350
Well, they combine
multiple features

8
00:00:16.350 --> 00:00:17.970
together into a new feature.

9
00:00:17.970 --> 00:00:20.490
That's fundamentally
what a feature across.

10
00:00:20.490 --> 00:00:24.615
It encodes non-linearity
in the feature space,

11
00:00:24.615 --> 00:00:29.385
or encodes the same information
and fewer features.

12
00:00:29.385 --> 00:00:32.490
We can create many
different kinds of

13
00:00:32.490 --> 00:00:35.625
feature crosses and it
really depends on our data.

14
00:00:35.625 --> 00:00:37.110
It requires a little bit of

15
00:00:37.110 --> 00:00:40.315
imagination to look for
ways to try to do that,

16
00:00:40.315 --> 00:00:43.030
to combine the
features that we have.

17
00:00:43.030 --> 00:00:45.950
For example, if we have
numerical features,

18
00:00:45.950 --> 00:00:48.950
we could multiply two
features and produce

19
00:00:48.950 --> 00:00:54.430
one feature that has an
expression of those two features.

20
00:00:54.430 --> 00:00:56.450
X number of features,

21
00:00:56.450 --> 00:00:58.310
we could multiply
them all together if

22
00:00:58.310 --> 00:01:00.290
there are numerical features and

23
00:01:00.290 --> 00:01:02.330
then end up with
one feature instead

24
00:01:02.330 --> 00:01:04.590
of say five. That's great.

25
00:01:04.590 --> 00:01:07.485
We can also take
categorical features or

26
00:01:07.485 --> 00:01:09.980
even numerical features and

27
00:01:09.980 --> 00:01:13.900
combine them in ways that
make a semantic sense.

28
00:01:13.900 --> 00:01:17.470
Taking the day of
the week and hour,

29
00:01:17.470 --> 00:01:19.940
if those are two different
features that we have,

30
00:01:19.940 --> 00:01:23.645
putting those together, we
can express that as the hour

31
00:01:23.645 --> 00:01:25.100
of the week and we have

32
00:01:25.100 --> 00:01:27.940
the same information
in one feature.

33
00:01:27.940 --> 00:01:30.380
To encode features, well,

34
00:01:30.380 --> 00:01:32.405
let's look at some examples.

35
00:01:32.405 --> 00:01:35.630
Suppose we have a
data-set that's looking

36
00:01:35.630 --> 00:01:39.520
at healthy trees and sick tree.

37
00:01:39.520 --> 00:01:42.780
We're going to use a
scatter-plot to try

38
00:01:42.780 --> 00:01:45.630
to understand our data.

39
00:01:45.630 --> 00:01:47.750
We're looking at the
scatter plot and we

40
00:01:47.750 --> 00:01:49.670
use some visualization tools,

41
00:01:49.670 --> 00:01:51.230
and we ask ourselves,

42
00:01:51.230 --> 00:01:53.900
can we draw a line to

43
00:01:53.900 --> 00:01:57.095
separate these two groups,
these two clusters?

44
00:01:57.095 --> 00:02:00.290
If we can use a line to
create the decision boundary,

45
00:02:00.290 --> 00:02:01.490
then we know that we can use

46
00:02:01.490 --> 00:02:04.420
a linear model. That's great.

47
00:02:04.420 --> 00:02:07.170
In this case, looking at this,

48
00:02:07.170 --> 00:02:11.405
we could use a line to
do that separation.

49
00:02:11.405 --> 00:02:14.030
That's great. Linear
models are very efficient.

50
00:02:14.030 --> 00:02:18.530
We love that, but let's suppose
the data looks like this.

51
00:02:18.530 --> 00:02:21.460
Not so easy anymore.

52
00:02:21.460 --> 00:02:25.230
This becomes a
non-linear program.

53
00:02:25.230 --> 00:02:27.050
Then the question is,

54
00:02:27.050 --> 00:02:29.000
can we project this data into

55
00:02:29.000 --> 00:02:32.350
a linear space and use
it with a linear model,

56
00:02:32.350 --> 00:02:35.660
or do we have to use
a non-linear model

57
00:02:35.660 --> 00:02:37.370
to work with this data?

58
00:02:37.370 --> 00:02:38.720
Because if we try to draw

59
00:02:38.720 --> 00:02:42.890
just a linear classification
boundary with a data as is,

60
00:02:42.890 --> 00:02:45.530
it doesn't really work too great.

61
00:02:45.530 --> 00:02:48.560
Again, we can use
visualization tools

62
00:02:48.560 --> 00:02:50.720
to help us understand this.

63
00:02:50.720 --> 00:02:53.690
Looking at our data
really helps inform

64
00:02:53.690 --> 00:02:56.240
us and guide the choices that we

65
00:02:56.240 --> 00:02:59.330
make as developers
about what kind of

66
00:02:59.330 --> 00:03:03.700
models we choose and what
feature engineering we apply.

67
00:03:03.700 --> 00:03:06.230
Key points here,
Feature Crossing as

68
00:03:06.230 --> 00:03:08.809
a way to create
synthetic features,

69
00:03:08.809 --> 00:03:12.815
often encoding non-linearity
in the features space.

70
00:03:12.815 --> 00:03:20.705
We're going to transform both
categorical and numerical.

71
00:03:20.705 --> 00:03:22.580
We could do that in, into

72
00:03:22.580 --> 00:03:26.070
either continuous variables
or the other way around.
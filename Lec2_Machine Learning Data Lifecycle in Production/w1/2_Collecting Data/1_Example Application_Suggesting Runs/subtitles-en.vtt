WEBVTT

1
00:00:00.000 --> 00:00:02.940
Now let's talk about
collecting data

2
00:00:02.940 --> 00:00:06.345
and look at an
example application.

3
00:00:06.345 --> 00:00:09.720
For this example, we're
going to be looking at

4
00:00:09.720 --> 00:00:13.965
an application that
suggests runs to runners.

5
00:00:13.965 --> 00:00:16.545
There's different runners with

6
00:00:16.545 --> 00:00:18.689
different level of fitness.

7
00:00:18.689 --> 00:00:21.180
The first step is
really to try to

8
00:00:21.180 --> 00:00:25.150
understand the users
as we've discussed.

9
00:00:25.670 --> 00:00:30.300
This system is going to
suggest runs based on

10
00:00:30.300 --> 00:00:32.340
the user's behavior and by

11
00:00:32.340 --> 00:00:35.370
leveraging observed
patterns and preferences.

12
00:00:35.370 --> 00:00:40.160
The goal is to improve the
consistency of running

13
00:00:40.160 --> 00:00:42.170
and for runners to complete

14
00:00:42.170 --> 00:00:46.320
those runs and to really
be happy about that.

15
00:00:47.480 --> 00:00:51.950
Some key considerations.
First of all,

16
00:00:51.950 --> 00:00:55.040
you need to consider data
quality and data collection.

17
00:00:55.040 --> 00:00:59.615
What kind of data and how
much data do you need?

18
00:00:59.615 --> 00:01:02.195
How often do you need new data?

19
00:01:02.195 --> 00:01:05.285
When do you expect
things to change?

20
00:01:05.285 --> 00:01:08.070
Is that data annotated?

21
00:01:08.110 --> 00:01:10.580
You also need to translate

22
00:01:10.580 --> 00:01:13.565
the user needs into data needs.

23
00:01:13.565 --> 00:01:17.030
Understand the user's grade
but at the end of the day we

24
00:01:17.030 --> 00:01:21.005
do need features and data.

25
00:01:21.005 --> 00:01:25.459
We need to first understand
the user because otherwise

26
00:01:25.459 --> 00:01:27.440
we run the risk of

27
00:01:27.440 --> 00:01:30.620
collecting a bunch of data
that is really just garbage.

28
00:01:30.620 --> 00:01:32.720
But once we understand the user,

29
00:01:32.720 --> 00:01:36.275
then we need to translate the
user needs into data needs.

30
00:01:36.275 --> 00:01:39.890
We're going to do that with
identifying what the data is,

31
00:01:39.890 --> 00:01:43.555
what the features are
and what the labels are.

32
00:01:43.555 --> 00:01:47.125
Here's an example data set.

33
00:01:47.125 --> 00:01:50.150
We've got three different
examples here for

34
00:01:50.150 --> 00:01:51.230
three different kinds of

35
00:01:51.230 --> 00:01:54.060
runs and we've got some features.

36
00:01:54.310 --> 00:01:57.470
The examples here are
the Boston Marathon,

37
00:01:57.470 --> 00:02:02.590
the Seattle Oktoberfest 5K and
the Houston Half-marathon.

38
00:02:02.590 --> 00:02:04.815
The 5K sounds good to me,

39
00:02:04.815 --> 00:02:06.660
I'm that kind of a runner.

40
00:02:06.660 --> 00:02:09.229
The features well,
the Run itself,

41
00:02:09.229 --> 00:02:12.350
the Runner Time
and the Elevation,

42
00:02:12.350 --> 00:02:14.060
which is also important.

43
00:02:14.060 --> 00:02:17.120
Then the labels here are just
going to be how the runner

44
00:02:17.120 --> 00:02:20.390
rates the fun level
of those runs.

45
00:02:20.390 --> 00:02:22.325
It looks like they
agree with me that

46
00:02:22.325 --> 00:02:23.975
the 5K sounds like it'd be

47
00:02:23.975 --> 00:02:27.785
a lot of fun. Get
to know your data.

48
00:02:27.785 --> 00:02:29.330
You need to identify

49
00:02:29.330 --> 00:02:31.240
the data sources that
you're going to use,

50
00:02:31.240 --> 00:02:34.000
where are you going to get
this data and not just the

51
00:02:34.000 --> 00:02:37.405
first time but on
an ongoing basis?

52
00:02:37.405 --> 00:02:39.465
It's not just the training

53
00:02:39.465 --> 00:02:41.750
but you need to collect
that same data,

54
00:02:41.750 --> 00:02:43.925
for you not to do inference

55
00:02:43.925 --> 00:02:47.164
when you want to
create a prediction.

56
00:02:47.164 --> 00:02:48.875
You need to think about,

57
00:02:48.875 --> 00:02:51.755
how often do I need to
refresh my trainings at?

58
00:02:51.755 --> 00:02:55.550
Along the way when you're
working with your data,

59
00:02:55.550 --> 00:02:56.810
you need to make
sure that there's

60
00:02:56.810 --> 00:03:00.170
actually predictive
value, in your data.

61
00:03:00.170 --> 00:03:01.700
Anyone trying to make
sure that you've

62
00:03:01.700 --> 00:03:04.550
eliminated features and data

63
00:03:04.550 --> 00:03:06.920
that does not have
predictive value.

64
00:03:06.920 --> 00:03:10.100
But there's also some
more basic things like,

65
00:03:10.100 --> 00:03:11.915
is the data consistent?

66
00:03:11.915 --> 00:03:14.390
When you're expecting,
say a float do

67
00:03:14.390 --> 00:03:17.210
you always get a
floater or is it mixed?

68
00:03:17.210 --> 00:03:21.260
Looking for things like
outliers too or just errors.

69
00:03:21.260 --> 00:03:24.190
Because remember, you're
dealing with systems you

70
00:03:24.190 --> 00:03:25.490
could have a sensor that goes

71
00:03:25.490 --> 00:03:27.655
bad and then you got an error.

72
00:03:27.655 --> 00:03:29.480
There could be data issues coming

73
00:03:29.480 --> 00:03:30.875
from different measurements,

74
00:03:30.875 --> 00:03:34.970
different types and
also simple things like

75
00:03:34.970 --> 00:03:36.860
the difference between
an end to the float

76
00:03:36.860 --> 00:03:39.560
or how missing value is encoded,

77
00:03:39.560 --> 00:03:41.690
that can all cause problems.

78
00:03:41.690 --> 00:03:44.305
In this example data set,

79
00:03:44.305 --> 00:03:47.360
if the elevation is zero feet,

80
00:03:47.360 --> 00:03:50.690
does that really mean
that we're at sea level

81
00:03:50.690 --> 00:03:52.910
or does it mean
that we don't have

82
00:03:52.910 --> 00:03:56.070
any elevation data
for that record?

83
00:03:57.200 --> 00:04:00.845
If the output is coming from

84
00:04:00.845 --> 00:04:05.165
other ML models maybe if
you're using an ensemble.

85
00:04:05.165 --> 00:04:07.880
If there's errors in those,

86
00:04:07.880 --> 00:04:09.470
then you can compound

87
00:04:09.470 --> 00:04:11.120
those errors when you try to

88
00:04:11.120 --> 00:04:13.345
use it in a downstream model.

89
00:04:13.345 --> 00:04:15.545
You also want to make
sure that you're

90
00:04:15.545 --> 00:04:17.930
looking for errors
and issues early in

91
00:04:17.930 --> 00:04:20.585
the process and monitoring

92
00:04:20.585 --> 00:04:24.265
the data sources for
system issues and outages.

93
00:04:24.265 --> 00:04:27.720
Because remember, we're
operating this thing,

94
00:04:27.890 --> 00:04:31.200
could be 24-7 easily,

95
00:04:31.200 --> 00:04:32.835
a lot of things are.

96
00:04:32.835 --> 00:04:34.970
Also, you need to expect to

97
00:04:34.970 --> 00:04:37.445
have system issues and outages.

98
00:04:37.445 --> 00:04:40.490
What if the app was
offline for a while and

99
00:04:40.490 --> 00:04:42.530
the recorded runner time is

100
00:04:42.530 --> 00:04:46.580
wrong for some number of users,

101
00:04:46.580 --> 00:04:49.540
do you have ways
to deal with that?

102
00:04:49.540 --> 00:04:51.995
Measuring the data effectiveness,

103
00:04:51.995 --> 00:04:55.330
you need some intuition
about the data value,

104
00:04:55.330 --> 00:04:59.300
but your intuition
can be misleading.

105
00:04:59.300 --> 00:05:02.615
You really need to make
sure that you're looking at

106
00:05:02.615 --> 00:05:05.600
which data is really giving
you the most information.

107
00:05:05.600 --> 00:05:09.410
Feature selection and feature
engineering are really

108
00:05:09.410 --> 00:05:12.440
critical to shaping your data

109
00:05:12.440 --> 00:05:14.330
to be what you need it to be.

110
00:05:14.330 --> 00:05:17.240
The feature engineering
will help you maximize

111
00:05:17.240 --> 00:05:18.740
the predictive signals once

112
00:05:18.740 --> 00:05:22.175
you've really identified
where those are.

113
00:05:22.175 --> 00:05:25.070
Feature selection,
that helps you measure

114
00:05:25.070 --> 00:05:27.845
where that predictive
information is and

115
00:05:27.845 --> 00:05:30.995
really focus in on

116
00:05:30.995 --> 00:05:33.290
those features that give you

117
00:05:33.290 --> 00:05:37.945
the most value and help
your model the most.

118
00:05:37.945 --> 00:05:40.170
Again, user needs.

119
00:05:40.170 --> 00:05:42.080
You need to understand
the user and

120
00:05:42.080 --> 00:05:44.690
the application and in this case,

121
00:05:44.690 --> 00:05:47.485
we're looking at running
data from an app.

122
00:05:47.485 --> 00:05:50.210
We can get demographic data when

123
00:05:50.210 --> 00:05:53.060
the user fills out
their profile and we

124
00:05:53.060 --> 00:05:55.430
also probably can
get some GPS data to

125
00:05:55.430 --> 00:05:58.550
give us some local
geographic information.

126
00:05:58.550 --> 00:06:02.540
At high level that helps
us understand the user.

127
00:06:02.540 --> 00:06:05.960
Then we need to translate
that into features.

128
00:06:05.960 --> 00:06:08.780
The runner demographics,
we need to express

129
00:06:08.780 --> 00:06:12.680
that as a feature or
probably several features.

130
00:06:12.680 --> 00:06:14.525
Things like the time of day,

131
00:06:14.525 --> 00:06:16.985
how long it takes them
to complete a run,

132
00:06:16.985 --> 00:06:19.040
their pace during the run,

133
00:06:19.040 --> 00:06:20.660
the distance and so forth,

134
00:06:20.660 --> 00:06:23.510
the elevation and if we're

135
00:06:23.510 --> 00:06:25.310
working with an app that has

136
00:06:25.310 --> 00:06:27.680
some sensors like a
heart rate monitor,

137
00:06:27.680 --> 00:06:29.540
that's great information to

138
00:06:29.540 --> 00:06:31.985
have to really feed
into this app,

139
00:06:31.985 --> 00:06:36.200
probably has some
predictive information.

140
00:06:36.200 --> 00:06:38.500
But again, we need to test that.

141
00:06:38.500 --> 00:06:41.805
What our labels going to be?

142
00:06:41.805 --> 00:06:44.400
Runner acceptance in this case

143
00:06:44.400 --> 00:06:46.970
is a label that we
want to focus on.

144
00:06:46.970 --> 00:06:50.670
Runners that take our
suggestions and use them.

145
00:06:50.670 --> 00:06:54.290
That tells us that the app
successfully gave them

146
00:06:54.290 --> 00:06:58.530
a run that they wanted
to do and conversely,

147
00:06:58.530 --> 00:07:00.420
if they rejected it.

148
00:07:00.420 --> 00:07:03.150
User-generated feedback.

149
00:07:03.150 --> 00:07:04.880
You need to think
about, first of all,

150
00:07:04.880 --> 00:07:07.940
how they're going to give
you that feedback in

151
00:07:07.940 --> 00:07:09.740
a structured way that you can

152
00:07:09.740 --> 00:07:13.120
use to help with
training your model.

153
00:07:13.120 --> 00:07:15.785
Then you know things
like user rating.

154
00:07:15.785 --> 00:07:19.460
In this case of the enjoyment
of the recommended runs.

155
00:07:19.460 --> 00:07:22.220
Again, it needs to be in
a form that we can use.

156
00:07:22.220 --> 00:07:24.110
It can't just be free form
unless you're going to

157
00:07:24.110 --> 00:07:26.780
do NLP to try to

158
00:07:26.780 --> 00:07:28.640
understand their paragraph of

159
00:07:28.640 --> 00:07:32.060
feedback but typically
you're not going to do that.

160
00:07:32.060 --> 00:07:35.660
But anyway, the point here is
that you need to understand

161
00:07:35.660 --> 00:07:37.760
the data and your user

162
00:07:37.760 --> 00:07:40.720
and how you're going
to apply the labels.

163
00:07:40.720 --> 00:07:45.300
Key points: understand your
user or your application,

164
00:07:45.300 --> 00:07:46.625
if there is no user,

165
00:07:46.625 --> 00:07:50.135
translate their needs
into data problems

166
00:07:50.135 --> 00:07:53.510
and well-defined features that

167
00:07:53.510 --> 00:07:56.200
give you predictive information.

168
00:07:56.200 --> 00:08:01.370
What kind of data can you
get? What's available?

169
00:08:01.370 --> 00:08:04.610
What are the details and
issues for your data?

170
00:08:04.610 --> 00:08:05.810
Things like sensors.

171
00:08:05.810 --> 00:08:07.865
How reliable are they?

172
00:08:07.865 --> 00:08:11.375
Where's the predictive
information in your data?

173
00:08:11.375 --> 00:08:14.875
It may not be where you think
it is, it sometimes isn't.

174
00:08:14.875 --> 00:08:17.570
What are the labels? We
need to make sure that

175
00:08:17.570 --> 00:08:22.250
we're training a model to
predict the right thing.

176
00:08:22.250 --> 00:08:24.155
We need to make sure our labels

177
00:08:24.155 --> 00:08:26.960
are the correct
ones for our goals.

178
00:08:26.960 --> 00:08:29.000
That's going to get
to the metrics.

179
00:08:29.000 --> 00:08:31.520
What are the metrics that
we're going to use to measure

180
00:08:31.520 --> 00:08:35.070
the performance of our model?
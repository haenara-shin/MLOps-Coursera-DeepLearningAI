WEBVTT

1
00:00:00.640 --> 00:00:04.284
What is hard about trading machine or
any model that does well?

2
00:00:04.284 --> 00:00:07.040
Let's look at some key challenges.

3
00:00:07.040 --> 00:00:11.986
One framework that I hope you keep in
mind when developing machine learning

4
00:00:11.986 --> 00:00:17.169
systems is that, AI systems of machine
learning systems comprise both code,

5
00:00:17.169 --> 00:00:21.140
meaning the algorithm or
the model as well as data.

6
00:00:21.140 --> 00:00:25.681
There's been a lot of emphasis in the last
several decades on how to improve

7
00:00:25.681 --> 00:00:26.350
the code.

8
00:00:26.350 --> 00:00:31.888
In fact a lot of a I research had grown up
by researchers downloading data sets and

9
00:00:31.888 --> 00:00:36.210
trying to find an overall model
that does well on the dataset.

10
00:00:36.210 --> 00:00:37.877
But for many applications,

11
00:00:37.877 --> 00:00:42.740
you have the flexibility to change
the data if you don't like the data.

12
00:00:42.740 --> 00:00:47.158
And so, there are many projects
where the algorithm or

13
00:00:47.158 --> 00:00:50.241
model is basically a solved problem.

14
00:00:50.241 --> 00:00:54.128
Some model you download off get
hub will do well enough, and

15
00:00:54.128 --> 00:00:58.794
they'll be more efficient to spend
a lot of your time improving the data

16
00:00:58.794 --> 00:01:03.570
because the data usually has been
much more customized to your problem.

17
00:01:03.570 --> 00:01:08.911
This is a view that will carry throughout
this week and next week's materials.

18
00:01:08.911 --> 00:01:14.235
Diving into more detail,
when building a machine learning system,

19
00:01:14.235 --> 00:01:20.028
you may have an algorithm or a model,
this would be your code and some data.

20
00:01:20.028 --> 00:01:23.553
And it's by training your
algorithm on the data that you

21
00:01:23.553 --> 00:01:28.440
then have your machine learning
model that can make predictions.

22
00:01:28.440 --> 00:01:33.350
And of course hyper parameters
are an additional input to this process.

23
00:01:33.350 --> 00:01:36.724
It is important for many applications
to make sure you have a well to

24
00:01:36.724 --> 00:01:40.600
learning rates and regularization
parameter and maybe a few other things.

25
00:01:40.600 --> 00:01:43.881
The hyper parameters are important, but

26
00:01:43.881 --> 00:01:49.505
because the space of hyper parameters
is usually relatively limited,

27
00:01:49.505 --> 00:01:55.150
I'm going to spend more of our time
focusing on the code and on the data.

28
00:01:55.150 --> 00:01:58.767
So model development is
a highly iterative process.

29
00:01:58.767 --> 00:02:04.660
You usually start off with some model and
hyper parameters and data training model,

30
00:02:04.660 --> 00:02:09.640
and then take the model to carry error
analysis, and use that to help you

31
00:02:09.640 --> 00:02:14.380
decide how to improve the model or
the hyper parameters or the data.

32
00:02:14.380 --> 00:02:19.377
Because machine learning it's such
an empirical process, being able to go

33
00:02:19.377 --> 00:02:24.550
through this loop many times very quickly,
is key to improving performance.

34
00:02:24.550 --> 00:02:28.922
But one of the things that will
help you improve performance to is,

35
00:02:28.922 --> 00:02:34.075
each time through the loop, being able
to make good choices about how to modify

36
00:02:34.075 --> 00:02:38.862
the data or how to modify the model or
how to modify the hyper parameters.

37
00:02:38.862 --> 00:02:43.320
After you've done this enough times and
achieve a good model,

38
00:02:43.320 --> 00:02:48.703
one last step that's often useful is to
carry out a richer error analysis and

39
00:02:48.703 --> 00:02:53.664
have your system go through a final
audit to make sure that it is working

40
00:02:53.664 --> 00:02:57.060
before you push it to
a production deployment.

41
00:02:57.060 --> 00:02:59.568
So why is model development hard?

42
00:02:59.568 --> 00:03:04.746
When building a model,
I think there are three key milestones

43
00:03:04.746 --> 00:03:08.939
that most projects should
aspire to accomplish.

44
00:03:08.939 --> 00:03:14.090
First is you probably want to make sure
you do well, at least on the training set.

45
00:03:14.090 --> 00:03:19.917
So, if you're predicting housing prices
as a function of the size of a house,

46
00:03:19.917 --> 00:03:25.145
are you at least able to fit a line
that is your training set quite well?

47
00:03:25.145 --> 00:03:28.439
After you've done well
on the training set,

48
00:03:28.439 --> 00:03:33.641
you then have to ask if your algorithm
does well on the development set or

49
00:03:33.641 --> 00:03:38.640
the holdout cross validation set,
and then also the test set.

50
00:03:38.640 --> 00:03:42.814
If your algorithm isn't even
doing well on the training set,

51
00:03:42.814 --> 00:03:47.170
then it's very unlikely to do well
on the dev set or the test set.

52
00:03:47.170 --> 00:03:51.985
So I think of step one as
something you have to do first as

53
00:03:51.985 --> 00:03:56.605
a milestone on your way
towards achieving step two.

54
00:03:56.605 --> 00:04:00.278
And then after you do well
on the dev set or test set,

55
00:04:00.278 --> 00:04:05.150
you also have to make sure that
you're learning algorithm does well

56
00:04:05.150 --> 00:04:10.470
according to the business metrics or
according to the project's goals.

57
00:04:10.470 --> 00:04:16.063
Over the last several decades,
a lot of machine learning development,

58
00:04:16.063 --> 00:04:20.839
was driven by the goal of doing
well on the dev set or test set.

59
00:04:20.839 --> 00:04:26.009
Unfortunately for many problems,
having a high tested accuracy

60
00:04:26.009 --> 00:04:30.630
is not sufficient for
achieving the goals of the project.

61
00:04:30.630 --> 00:04:35.597
And this has led to a lot of frustration
and disagreements between the machine

62
00:04:35.597 --> 00:04:40.490
running team, which is very good at
doing this and business teams which care

63
00:04:40.490 --> 00:04:45.340
more about the business metrics or
some other goals of the project.

64
00:04:45.340 --> 00:04:49.413
So you may be wondering, hey Andrew,
how is it possibly true that

65
00:04:49.413 --> 00:04:53.810
achieving low average tested error
isn't good enough for a project?

66
00:04:53.810 --> 00:04:58.570
There are few common patterns that I've
seen across many projects where you need

67
00:04:58.570 --> 00:05:01.510
something beyond low
average test set error, and

68
00:05:01.510 --> 00:05:06.340
people spot these issues will help you
be more efficient in addressing them.

69
00:05:06.340 --> 00:05:09.161
Let's dive more into this
topic in the next video.